{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA5BPL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWlB,EAEhCY,YAAW,KACT,IAAKO,EAAI,EAAGA,EAAID,EAAOE,MAAOD,GAAK,EACjChB,EAAcgB,EAAI,EAAGF,EAAKG,MAAQD,GAC/BE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,KACjBP,EAAAwB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,SAAYmB,OAElE,EAAOpB,WAAUC,WAChBP,EAAAwB,OAAMG,QAAC,sBAASrB,QAA8BC,WAGnDW,EAAMI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = form;\n\n  setTimeout(() => {\n    for (i = 0; i < amount.value; i += 1) {\n      createPromise(i + 1, step.value * i)\n        .then(({ position, delay }) =>\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        )\n        .catch(({ position, delay }) =>\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        );\n    }\n  }, delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","i","value","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f69a978b.js.map"}